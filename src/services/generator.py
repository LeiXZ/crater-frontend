# python3 ./src/services/generator.py ../web-backend/internal/resputil/code.go ./src/services/error_code.ts

import os
import re
import sys

def generate_ts_error_code_file(go_error_code_file_path: str, ts_error_code_file_path: str):
    # Read Go ErrorCode File
    go_error_code_file = open(go_error_code_file_path, 'r')
    go_error_code_file_content = go_error_code_file.read()
    go_error_code_file.close()

    # Parse Go ErrorCode File
    # match 'NotSpecified ErrorCode = 99999', get $1 as 'NotSpecified', $2 as '99999'
    go_error_code_pattern = re.compile(r'(\w+)\s+ErrorCode\s+=\s+(\d+)')
    go_error_code_matches = go_error_code_pattern.findall(go_error_code_file_content)

    # Generate TypeScript ErrorCode File
    ts_error_code_file = open(ts_error_code_file_path, 'w')
    ts_error_code_file.write('// This file is generated by generator.py\n')
    ts_error_code_file.write('// Please do not modify this file manually\n\n')
    ts_error_code_file.write('export type ErrorCode = number;\n\n')

    for go_error_code_match in go_error_code_matches:
        go_error_code_name = go_error_code_match[0]
        go_error_code_value = go_error_code_match[1]

        # Convert Go ErrorCode Name to TypeScript ErrorCode Name
        # e.g. 'NotSpecified' -> 'ERROR_NOT_SPECIFIED'
        # e.g. 'OK' -> 'OK'
        if go_error_code_name == 'OK':
            ts_error_code_name = 'OK'
        else:
            ts_error_code_name = 'ERROR_' + re.sub(r'(?<!^)(?=[A-Z])', '_', go_error_code_name).upper()

        ts_error_code_file.write(f'export const {ts_error_code_name}: ErrorCode = {go_error_code_value};\n')

    ts_error_code_file.close()

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print('Usage: python generator.py <Go ErrorCode File Path> <TypeScript ErrorCode File Path>')
        print('Example: python3 generator.py ~/Workspace/ACT/web-backend/pkg/server/response/code.go ./error_code.ts')
        sys.exit(1)

    go_error_code_file_path = sys.argv[1]
    ts_error_code_file_path = sys.argv[2]

    generate_ts_error_code_file(go_error_code_file_path, ts_error_code_file_path)
    print('TypeScript ErrorCode File Generated Successfully')

